import{d as o,o as t,c as r,a as c}from"./index-B4qzi52p.js";const p={class:"markdown-body"},s=c("<h1>vue编写规范</h1><h2>说明</h2><blockquote><p>初始化：<br> 规则：初始化等相关的函数调用要放到对应的生命周期中。<br> 原因：<br> 不要在不同位置都有调用函数的内容，很不清晰，可以放到生命周期中，方便查看及调整。</p></blockquote><blockquote><p>编写顺序：<br> 规则：<br> 按照这个顺序进行编写： inject、变量声明、computed、methods、回调（handle）、watch、生命周期、provide的方法、provide、expose的方法、expose、return<br> 原因：方便阅读。</p></blockquote><blockquote><p>命名：<br> 规则：<br> ref：名字后加Ref<br> reactive：名字后Rt<br> computed：名字后加Cp<br> 组件实例：名字后面加CmpRef<br> dom实例：名字后面加DomRef<br> hooks文件夹里面的内容也使用use开头</p></blockquote><blockquote><p>暴露：<br> 规则：需要通过expose来暴露方便。<br> 原因：<br> 明确暴露的内容，重构时可以明确哪些内容会对外部有影响。</p></blockquote>",6),b=[s],m={},l="",_=o({__name:"vue",setup(n,{expose:e}){return e({frontmatter:{},excerpt:void 0}),(a,d)=>(t(),r("div",p,b))}});export{_ as default,l as excerpt,m as frontmatter};
